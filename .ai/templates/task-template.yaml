# Task Template for Databricks Orchestrator

# Copy this template when creating new tasks in .ai/tasks/current.yaml

- id: "CATEGORY-###"  # e.g., API-003, TEST-UI-008, FIX-002
  title: "Brief descriptive title"
  status: "pending"  # pending | in_progress | completed | blocked
  priority: "medium"  # low | medium | high | critical
  
  # Estimates and tracking
  estimated_hours: 0
  actual_hours: 0  # Update when completed
  completion_date: null  # YYYY-MM-DD when completed
  
  # Task details
  description: |
    Detailed description of what needs to be done.
    Include context, requirements, and success criteria.
    
  dependencies: []  # List of task IDs this depends on, e.g., ["API-001", "UI-002"]
  
  # Optional fields
  assignee: null  # GitHub username if assigned
  tags: []  # e.g., ["backend", "testing", "bug-fix"]
  
  # Deliverables (optional but recommended)
  deliverables:
    - path: "path/to/file.py"
      type: "file"  # file | feature | documentation | test
      description: "What this deliverable provides"
      status: "pending"  # pending | in_progress | completed
      
  # Notes (optional)
  notes: |
    Any additional context, decisions, or considerations.
    Links to relevant documentation or discussions.

# Task ID Categories:
# - MVP-###: Core MVP features
# - API-###: Backend API endpoints
# - UI-###: Frontend components
# - TEST-###: Testing tasks
# - FIX-###: Bug fixes
# - DOC-###: Documentation
# - INTG-###: Integrations
# - PERF-###: Performance improvements
# - SEC-###: Security enhancements
# - DEL-###: Delivery/deployment tasks

# Priority Guidelines:
# - critical: Blocking other work or breaking production
# - high: Important for current sprint/milestone  
# - medium: Should be done soon but not blocking
# - low: Nice to have, can be deferred

# Status Definitions:
# - pending: Not started yet
# - in_progress: Currently being worked on
# - completed: Finished and tested
# - blocked: Waiting on dependency or decision